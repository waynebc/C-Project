主要思路：
1、对于k个数有公共最大公约数d和最小公倍数m，将d与m作合数分解，分解为若干质数的乘幂之积。

2、m和d的合数分解结果必然满足以下性质：
	1、对d包含的任意质数x，设幂数为xd，则m也必包含该质数x，设幂数为xm，而且xd<=xm。m中的质数x，d则不一定含有，此时可设xd为0。
	2、设满足d和m相同的n个数，每个数合数分解所得的质数y及幂数yk必然满足以下条件：
		1、y属于x(m)；
		2、xd<=yk<=xm;
		3、y中必然至少有一个的幂数等于xd，至少有一个的幂数等于xm；
	3、所以可从m与d合数分解所得质数幂结果出发，倒推对某个质数幂，在k个数中出现的排列组合情况
		rtmp=(xm-xd+1)^k-2*(xm-xd)^k+(xm-xd-1)^k（容斥原理）,
		公式意义：出现xd和xm的情况-只出现xd的情况-只出现xm的情况+既不出现xd也不出现xm的情况。
	4、最终结果是各个质数幂的排列组合情况相乘
		r=r*rtmp;

3、k、m、d均可能为大数（k为long long），所以结果对MOD取模，运算中运用求余公式：
	1、(n1*n2*n3)%MOD=(n1%MOD)*(n2%MOD)*(n3%MOD)
	2、(n1+n2+n3)%MOD=(n1%MOD)+(n2%MOD)+(n3%MOD)
	3、(n1-n2)%MOD=(n1%MOD)+(MOD-n2%MOD)

4、合数分解思路：
	i=2。
	数n对i取余不为0则一直除以i，得到此时包含的质数i的值以及幂数。
	i再加一，重复以上步骤。

5、题中的需要求k次幂，k为long long类型，所以需要快速求高次幂取模算法，大体思路：
	求 (x^numx -> x1 > M )&& numx < k;
	有 (x1^(k/numx) * x^(k%numx))%M == (x^k)%M
	有 (x1%M) -> x; k/numx -> k; tres=(tres%M)*(x^(k%numx))%M; 将k降阶，再重复以上过程。
	最终k=1，有res=(k*tres)%M

6、long long 和 int 类型的混合运算，一定注意范围越界问题，运算结果可能为long long的，被赋值变量类型一定要为 long long。


